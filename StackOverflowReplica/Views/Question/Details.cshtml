@model StackOverflowReplica.Models.Question

@using System.Security.Claims

@if (User.Identity.IsAuthenticated)
 {

 <h1>@Model.Title - asked by @Model.User.UserName</h1>
 <p>@Model.ContentBody</p>
@Html.ActionLink("Post a response", "Create", "Response", new {QuestionId = Model.Id})
} else {
    <p>@Html.ActionLink("Log in to view this question", "Login", "Account")</p>
}


@foreach(var response in Model.Responses)
{
    @if(response.Id == @Model.BestResponseId)
    {
    <h3>This is the best answer</h3>
       
    <h3>@response.User.UserName</h3>
    <span>
	    Votes: @response.VoteCount |
    	@Html.ActionLink("Upvote", "VoteResponse", "Response", new {ResponseId = response.Id, QuestionId = @Model.Id, vote = 1 }) |
        @Html.ActionLink("Downvote", "VoteResponse", "Response", new {ResponseId = response.Id, QuestionId = @Model.Id, vote = -1 })
    </span>
    <p>@response.ContentBody</p>
     
    } 
}


@foreach(var response in Model.Responses.OrderByDescending(x=>x.VoteCount))
{  

if (response.Id != Model.BestResponseId)
    {
       <hr/>
        <h3>@response.User.UserName</h3>
        <p>@response.ContentBody</p>
       
       @if(User.Identity.Name == @Model.User.UserName)
        {
            <span>
	            Votes: @response.VoteCount |
                @Html.ActionLink("Upvote", "VoteResponse", "Response", new {ResponseId = response.Id, QuestionId = @Model.Id, vote = 1 }) |
                @Html.ActionLink("Downvote", "VoteResponse", "Response", new {ResponseId = response.Id, QuestionId = @Model.Id, vote = -1 })
	        </span>
            <div>@Html.ActionLink("Set as Best Response", "SetAsBest", "Question", new {ResponseId = response.Id, QuestionId = @Model.Id})</div>
        }
    }
 
}
<hr/>
@Html.ActionLink("View All Questions", "Index", "Question")